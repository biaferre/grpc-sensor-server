// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sensor.proto

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RequestMessage string                 `protobuf:"bytes,1,opt,name=request_message,json=requestMessage,proto3" json:"request_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SensorRequest) Reset() {
	*x = SensorRequest{}
	mi := &file_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorRequest) ProtoMessage() {}

func (x *SensorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorRequest.ProtoReflect.Descriptor instead.
func (*SensorRequest) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorRequest) GetRequestMessage() string {
	if x != nil {
		return x.RequestMessage
	}
	return ""
}

type SensorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	AvgTemp       float32                `protobuf:"fixed32,2,opt,name=avg_temp,json=avgTemp,proto3" json:"avg_temp,omitempty"`
	MaxTemp       float32                `protobuf:"fixed32,3,opt,name=max_temp,json=maxTemp,proto3" json:"max_temp,omitempty"`
	MinTemp       float32                `protobuf:"fixed32,4,opt,name=min_temp,json=minTemp,proto3" json:"min_temp,omitempty"`
	Err           string                 `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorResponse) Reset() {
	*x = SensorResponse{}
	mi := &file_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorResponse) ProtoMessage() {}

func (x *SensorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorResponse.ProtoReflect.Descriptor instead.
func (*SensorResponse) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SensorResponse) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorResponse) GetAvgTemp() float32 {
	if x != nil {
		return x.AvgTemp
	}
	return 0
}

func (x *SensorResponse) GetMaxTemp() float32 {
	if x != nil {
		return x.MaxTemp
	}
	return 0
}

func (x *SensorResponse) GetMinTemp() float32 {
	if x != nil {
		return x.MinTemp
	}
	return 0
}

func (x *SensorResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

var File_sensor_proto protoreflect.FileDescriptor

const file_sensor_proto_rawDesc = "" +
	"\n" +
	"\fsensor.proto\"8\n" +
	"\rSensorRequest\x12'\n" +
	"\x0frequest_message\x18\x01 \x01(\tR\x0erequestMessage\"\x90\x01\n" +
	"\x0eSensorResponse\x12\x1b\n" +
	"\tsensor_id\x18\x01 \x01(\tR\bsensorId\x12\x19\n" +
	"\bavg_temp\x18\x02 \x01(\x02R\aavgTemp\x12\x19\n" +
	"\bmax_temp\x18\x03 \x01(\x02R\amaxTemp\x12\x19\n" +
	"\bmin_temp\x18\x04 \x01(\x02R\aminTemp\x12\x10\n" +
	"\x03err\x18\x05 \x01(\tR\x03err2:\n" +
	"\x06Sensor\x120\n" +
	"\rGetSensorData\x12\x0e.SensorRequest\x1a\x0f.SensorResponseB/Z-github.com/biaferre/gprc-sensor-server/sensorb\x06proto3"

var (
	file_sensor_proto_rawDescOnce sync.Once
	file_sensor_proto_rawDescData []byte
)

func file_sensor_proto_rawDescGZIP() []byte {
	file_sensor_proto_rawDescOnce.Do(func() {
		file_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sensor_proto_rawDesc), len(file_sensor_proto_rawDesc)))
	})
	return file_sensor_proto_rawDescData
}

var file_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sensor_proto_goTypes = []any{
	(*SensorRequest)(nil),  // 0: SensorRequest
	(*SensorResponse)(nil), // 1: SensorResponse
}
var file_sensor_proto_depIdxs = []int32{
	0, // 0: Sensor.GetSensorData:input_type -> SensorRequest
	1, // 1: Sensor.GetSensorData:output_type -> SensorResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sensor_proto_init() }
func file_sensor_proto_init() {
	if File_sensor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sensor_proto_rawDesc), len(file_sensor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sensor_proto_goTypes,
		DependencyIndexes: file_sensor_proto_depIdxs,
		MessageInfos:      file_sensor_proto_msgTypes,
	}.Build()
	File_sensor_proto = out.File
	file_sensor_proto_goTypes = nil
	file_sensor_proto_depIdxs = nil
}
